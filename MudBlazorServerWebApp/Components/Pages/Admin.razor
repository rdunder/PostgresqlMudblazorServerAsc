
@*@page "/admin"*@

@rendermode InteractiveServer

@using Microsoft.AspNetCore.Authorization
@using Microsoft.AspNetCore.Identity
@using MudBlazorServerWebApp.Data

@inject UserManager<ApplicationUser> UserManager
@inject RoleManager<IdentityRole> RoleManager
@inject ILogger<Admin> Logger


@attribute [Authorize(Roles = "admin")]








@code {

	

	#region Code block to be executed to create the first user in DB as Admin 
	//		Remove the authorize attribute and uncomment this code, then go to this page to set up the first admin för the page.


	// string administrationRole = "admin";
	// string firstAdminUserName = "r.dunder@gmail.com";

	// public string successMessage = "";


	// protected override async Task OnInitializedAsync()
	// {
	// 	Logger.LogInformation("Trying to find the admin role");
	// 	var roleResult = await RoleManager.FindByNameAsync(administrationRole);

	// 	if (roleResult == null)
	// 	{
	// 		Logger.LogInformation("Admin role not present, so creating it");
	// 		await RoleManager.CreateAsync(new IdentityRole("admin"));
	// 	}

	// 	Logger.LogInformation("Trying to find the user that are supposed to be first admin");
	// 	var user = await UserManager.FindByNameAsync(firstAdminUserName);

	// 	if (user != null)
	// 	{
	// 		Logger.LogInformation("Checking if the user has the admin role");

	// 		var userInRole = await UserManager.IsInRoleAsync(user, administrationRole);
	// 		if (!userInRole)
	// 		{
	// 			Logger.LogInformation("Adding the user to the admin role");
	// 			await UserManager.AddToRoleAsync(user, administrationRole);
	// 		}
	// 		else
	// 		{
	// 			successMessage = "You have the admin role";
	// 		}
	// 	}
	// }
	#endregion
}
