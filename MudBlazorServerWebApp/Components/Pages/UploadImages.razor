@page "/upload/images"

@using Microsoft.AspNetCore.Authorization
@using Microsoft.AspNetCore.Identity
@using MudBlazorServerWebApp.Data

@attribute [Authorize]


<MudDivider Class="mt-10 mb-10" />

<MudFileUpload T="IBrowserFile" Accept=".png, .jpg" FilesChanged="UploadFiles2" MaximumFileCount="5">
    <ButtonTemplate>
        <MudButton HtmlTag="label"
                   Variant="Variant.Filled"
                   Color="Color.Primary"
                   StartIcon="@Icons.Material.Filled.CloudUpload"
                   for="@context.Id">
            Upload Images
        </MudButton>
    </ButtonTemplate>
</MudFileUpload>

@if (files != null)
{
    <MudList>
        @foreach (var file in files)
        {
            <MudListItem Icon="@Icons.Material.Filled.AttachFile">
                @file.Name <code>@file.Size bytes</code>
                
            </MudListItem>
        }
    </MudList>
}

<MudButton 
        Variant="Variant.Filled"
        Color="Color.Primary" 
        OnClick="() => ConvertToB64(files)">
    convert
</MudButton>

@if (base64Strings != null)
{
    <MudList>
        @foreach (var s in base64Strings)
        {
            <MudListItem>
                @s
            </MudListItem>
        }
    </MudList>
}


<MudButton Variant="Variant.Filled"
           Color="Color.Primary"
           OnClick="() => ShowImage(base64Strings[0])">
    ShowImage
</MudButton>

<img src="@imageSource" alt="Image" />


@code {
    List<IBrowserFile> files = new();
    List<string> plainStrings = new();
    List<string> base64Strings = new();

    string imageSource;

    private void UploadFiles2(IBrowserFile file)
    {
        files.Add(file);
        //TODO upload the files to the server
    }

    async Task ConvertToB64(List<IBrowserFile> files)
    {
        foreach (var file in files)
        {
            await using (var ms = new MemoryStream())
            {
                await file.OpenReadStream().CopyToAsync(ms);
                var imageBytes = ms.ToArray();

                string b64String = Convert.ToBase64String(imageBytes);
                base64Strings.Add(b64String);
            }            
        }
    }

    void ShowImage(string base64String)
    {
        byte[] imgBytes = Convert.FromBase64String(base64String);

    }
}
